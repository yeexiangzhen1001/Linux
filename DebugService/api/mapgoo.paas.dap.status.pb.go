// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mapgoo.paas.dap.status.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//创建数据库
type CreateDatabaseReq struct {
	//数据库名称
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDatabaseReq) Reset()         { *m = CreateDatabaseReq{} }
func (m *CreateDatabaseReq) String() string { return proto.CompactTextString(m) }
func (*CreateDatabaseReq) ProtoMessage()    {}
func (*CreateDatabaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{0}
}
func (m *CreateDatabaseReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateDatabaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateDatabaseReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateDatabaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatabaseReq.Merge(m, src)
}
func (m *CreateDatabaseReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateDatabaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatabaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatabaseReq proto.InternalMessageInfo

func (m *CreateDatabaseReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateDatabaseResp struct {
	//返回信息
	Base                 *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateDatabaseResp) Reset()         { *m = CreateDatabaseResp{} }
func (m *CreateDatabaseResp) String() string { return proto.CompactTextString(m) }
func (*CreateDatabaseResp) ProtoMessage()    {}
func (*CreateDatabaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{1}
}
func (m *CreateDatabaseResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateDatabaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateDatabaseResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateDatabaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDatabaseResp.Merge(m, src)
}
func (m *CreateDatabaseResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateDatabaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDatabaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDatabaseResp proto.InternalMessageInfo

func (m *CreateDatabaseResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

//判断数据库是否存在
type CheckDatabaseIsExistReq struct {
	//数据库名称
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckDatabaseIsExistReq) Reset()         { *m = CheckDatabaseIsExistReq{} }
func (m *CheckDatabaseIsExistReq) String() string { return proto.CompactTextString(m) }
func (*CheckDatabaseIsExistReq) ProtoMessage()    {}
func (*CheckDatabaseIsExistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{2}
}
func (m *CheckDatabaseIsExistReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckDatabaseIsExistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckDatabaseIsExistReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckDatabaseIsExistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDatabaseIsExistReq.Merge(m, src)
}
func (m *CheckDatabaseIsExistReq) XXX_Size() int {
	return m.Size()
}
func (m *CheckDatabaseIsExistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDatabaseIsExistReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDatabaseIsExistReq proto.InternalMessageInfo

func (m *CheckDatabaseIsExistReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CheckDatabaseIsExistResp struct {
	//返回信息
	Base                 *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CheckDatabaseIsExistResp) Reset()         { *m = CheckDatabaseIsExistResp{} }
func (m *CheckDatabaseIsExistResp) String() string { return proto.CompactTextString(m) }
func (*CheckDatabaseIsExistResp) ProtoMessage()    {}
func (*CheckDatabaseIsExistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{3}
}
func (m *CheckDatabaseIsExistResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckDatabaseIsExistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckDatabaseIsExistResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckDatabaseIsExistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckDatabaseIsExistResp.Merge(m, src)
}
func (m *CheckDatabaseIsExistResp) XXX_Size() int {
	return m.Size()
}
func (m *CheckDatabaseIsExistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckDatabaseIsExistResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckDatabaseIsExistResp proto.InternalMessageInfo

func (m *CheckDatabaseIsExistResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

//获取指令
type GetMinDownInfoCacheDbInfoReq struct {
	//原始库名
	OrigDbName string `protobuf:"bytes,1,opt,name=orig_db_name,json=origDbName,proto3" json:"orig_db_name,omitempty"`
	//用户id
	HoldId uint32 `protobuf:"varint,2,opt,name=hold_id,json=holdId,proto3" json:"hold_id,omitempty"`
	//用户级别
	HoldLevel uint32 `protobuf:"varint,3,opt,name=hold_level,json=holdLevel,proto3" json:"hold_level,omitempty"`
	//设备id
	ObjectId uint32 `protobuf:"varint,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	//获取比该值小的recid
	MaxRecId uint64 `protobuf:"varint,5,opt,name=max_rec_id,json=maxRecId,proto3" json:"max_rec_id,omitempty"`
	//条数
	Limit                uint32   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinDownInfoCacheDbInfoReq) Reset()         { *m = GetMinDownInfoCacheDbInfoReq{} }
func (m *GetMinDownInfoCacheDbInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetMinDownInfoCacheDbInfoReq) ProtoMessage()    {}
func (*GetMinDownInfoCacheDbInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{4}
}
func (m *GetMinDownInfoCacheDbInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMinDownInfoCacheDbInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMinDownInfoCacheDbInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMinDownInfoCacheDbInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinDownInfoCacheDbInfoReq.Merge(m, src)
}
func (m *GetMinDownInfoCacheDbInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *GetMinDownInfoCacheDbInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinDownInfoCacheDbInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinDownInfoCacheDbInfoReq proto.InternalMessageInfo

func (m *GetMinDownInfoCacheDbInfoReq) GetOrigDbName() string {
	if m != nil {
		return m.OrigDbName
	}
	return ""
}

func (m *GetMinDownInfoCacheDbInfoReq) GetHoldId() uint32 {
	if m != nil {
		return m.HoldId
	}
	return 0
}

func (m *GetMinDownInfoCacheDbInfoReq) GetHoldLevel() uint32 {
	if m != nil {
		return m.HoldLevel
	}
	return 0
}

func (m *GetMinDownInfoCacheDbInfoReq) GetObjectId() uint32 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *GetMinDownInfoCacheDbInfoReq) GetMaxRecId() uint64 {
	if m != nil {
		return m.MaxRecId
	}
	return 0
}

func (m *GetMinDownInfoCacheDbInfoReq) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetMinDownInfoCacheDbInfoResp struct {
	//返回信息
	Base *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	//recid列表
	RecIdList            []uint64 `protobuf:"varint,2,rep,packed,name=rec_id_list,json=recIdList,proto3" json:"rec_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMinDownInfoCacheDbInfoResp) Reset()         { *m = GetMinDownInfoCacheDbInfoResp{} }
func (m *GetMinDownInfoCacheDbInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetMinDownInfoCacheDbInfoResp) ProtoMessage()    {}
func (*GetMinDownInfoCacheDbInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{5}
}
func (m *GetMinDownInfoCacheDbInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMinDownInfoCacheDbInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMinDownInfoCacheDbInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMinDownInfoCacheDbInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMinDownInfoCacheDbInfoResp.Merge(m, src)
}
func (m *GetMinDownInfoCacheDbInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *GetMinDownInfoCacheDbInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMinDownInfoCacheDbInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetMinDownInfoCacheDbInfoResp proto.InternalMessageInfo

func (m *GetMinDownInfoCacheDbInfoResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetMinDownInfoCacheDbInfoResp) GetRecIdList() []uint64 {
	if m != nil {
		return m.RecIdList
	}
	return nil
}

//迁移指令
type MoveDownInfoCacheDbInfoReq struct {
	//原始库名
	OrigDbName string `protobuf:"bytes,1,opt,name=orig_db_name,json=origDbName,proto3" json:"orig_db_name,omitempty"`
	//目标库名
	DestDbName string `protobuf:"bytes,2,opt,name=dest_db_name,json=destDbName,proto3" json:"dest_db_name,omitempty"`
	//recid列表
	RecIdList            []uint64 `protobuf:"varint,3,rep,packed,name=rec_id_list,json=recIdList,proto3" json:"rec_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveDownInfoCacheDbInfoReq) Reset()         { *m = MoveDownInfoCacheDbInfoReq{} }
func (m *MoveDownInfoCacheDbInfoReq) String() string { return proto.CompactTextString(m) }
func (*MoveDownInfoCacheDbInfoReq) ProtoMessage()    {}
func (*MoveDownInfoCacheDbInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{6}
}
func (m *MoveDownInfoCacheDbInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MoveDownInfoCacheDbInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MoveDownInfoCacheDbInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MoveDownInfoCacheDbInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveDownInfoCacheDbInfoReq.Merge(m, src)
}
func (m *MoveDownInfoCacheDbInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *MoveDownInfoCacheDbInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveDownInfoCacheDbInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_MoveDownInfoCacheDbInfoReq proto.InternalMessageInfo

func (m *MoveDownInfoCacheDbInfoReq) GetOrigDbName() string {
	if m != nil {
		return m.OrigDbName
	}
	return ""
}

func (m *MoveDownInfoCacheDbInfoReq) GetDestDbName() string {
	if m != nil {
		return m.DestDbName
	}
	return ""
}

func (m *MoveDownInfoCacheDbInfoReq) GetRecIdList() []uint64 {
	if m != nil {
		return m.RecIdList
	}
	return nil
}

type MoveDownInfoCacheDbInfoResp struct {
	//返回信息
	Base                 *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MoveDownInfoCacheDbInfoResp) Reset()         { *m = MoveDownInfoCacheDbInfoResp{} }
func (m *MoveDownInfoCacheDbInfoResp) String() string { return proto.CompactTextString(m) }
func (*MoveDownInfoCacheDbInfoResp) ProtoMessage()    {}
func (*MoveDownInfoCacheDbInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{7}
}
func (m *MoveDownInfoCacheDbInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MoveDownInfoCacheDbInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MoveDownInfoCacheDbInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MoveDownInfoCacheDbInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveDownInfoCacheDbInfoResp.Merge(m, src)
}
func (m *MoveDownInfoCacheDbInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *MoveDownInfoCacheDbInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveDownInfoCacheDbInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_MoveDownInfoCacheDbInfoResp proto.InternalMessageInfo

func (m *MoveDownInfoCacheDbInfoResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

//删除指令原始数据
type DelDownInfoCacheDbInfoReq struct {
	//原始库名
	OrigDbName string `protobuf:"bytes,1,opt,name=orig_db_name,json=origDbName,proto3" json:"orig_db_name,omitempty"`
	//recid列表
	RecIdList            []uint64 `protobuf:"varint,2,rep,packed,name=rec_id_list,json=recIdList,proto3" json:"rec_id_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelDownInfoCacheDbInfoReq) Reset()         { *m = DelDownInfoCacheDbInfoReq{} }
func (m *DelDownInfoCacheDbInfoReq) String() string { return proto.CompactTextString(m) }
func (*DelDownInfoCacheDbInfoReq) ProtoMessage()    {}
func (*DelDownInfoCacheDbInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{8}
}
func (m *DelDownInfoCacheDbInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelDownInfoCacheDbInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelDownInfoCacheDbInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelDownInfoCacheDbInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelDownInfoCacheDbInfoReq.Merge(m, src)
}
func (m *DelDownInfoCacheDbInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *DelDownInfoCacheDbInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelDownInfoCacheDbInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelDownInfoCacheDbInfoReq proto.InternalMessageInfo

func (m *DelDownInfoCacheDbInfoReq) GetOrigDbName() string {
	if m != nil {
		return m.OrigDbName
	}
	return ""
}

func (m *DelDownInfoCacheDbInfoReq) GetRecIdList() []uint64 {
	if m != nil {
		return m.RecIdList
	}
	return nil
}

type DelDownInfoCacheDbInfoResp struct {
	//返回信息
	Base                 *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DelDownInfoCacheDbInfoResp) Reset()         { *m = DelDownInfoCacheDbInfoResp{} }
func (m *DelDownInfoCacheDbInfoResp) String() string { return proto.CompactTextString(m) }
func (*DelDownInfoCacheDbInfoResp) ProtoMessage()    {}
func (*DelDownInfoCacheDbInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce40c656eb41b6f2, []int{9}
}
func (m *DelDownInfoCacheDbInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelDownInfoCacheDbInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelDownInfoCacheDbInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelDownInfoCacheDbInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelDownInfoCacheDbInfoResp.Merge(m, src)
}
func (m *DelDownInfoCacheDbInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *DelDownInfoCacheDbInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelDownInfoCacheDbInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelDownInfoCacheDbInfoResp proto.InternalMessageInfo

func (m *DelDownInfoCacheDbInfoResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateDatabaseReq)(nil), "mapgoo.paas.dap.status.CreateDatabaseReq")
	proto.RegisterType((*CreateDatabaseResp)(nil), "mapgoo.paas.dap.status.CreateDatabaseResp")
	proto.RegisterType((*CheckDatabaseIsExistReq)(nil), "mapgoo.paas.dap.status.CheckDatabaseIsExistReq")
	proto.RegisterType((*CheckDatabaseIsExistResp)(nil), "mapgoo.paas.dap.status.CheckDatabaseIsExistResp")
	proto.RegisterType((*GetMinDownInfoCacheDbInfoReq)(nil), "mapgoo.paas.dap.status.GetMinDownInfoCacheDbInfoReq")
	proto.RegisterType((*GetMinDownInfoCacheDbInfoResp)(nil), "mapgoo.paas.dap.status.GetMinDownInfoCacheDbInfoResp")
	proto.RegisterType((*MoveDownInfoCacheDbInfoReq)(nil), "mapgoo.paas.dap.status.MoveDownInfoCacheDbInfoReq")
	proto.RegisterType((*MoveDownInfoCacheDbInfoResp)(nil), "mapgoo.paas.dap.status.MoveDownInfoCacheDbInfoResp")
	proto.RegisterType((*DelDownInfoCacheDbInfoReq)(nil), "mapgoo.paas.dap.status.DelDownInfoCacheDbInfoReq")
	proto.RegisterType((*DelDownInfoCacheDbInfoResp)(nil), "mapgoo.paas.dap.status.DelDownInfoCacheDbInfoResp")
}

func init() { proto.RegisterFile("mapgoo.paas.dap.status.proto", fileDescriptor_ce40c656eb41b6f2) }

var fileDescriptor_ce40c656eb41b6f2 = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x3b, 0x89, 0x1b, 0x9a, 0x97, 0x52, 0xca, 0xa8, 0x38, 0xce, 0xc6, 0x31, 0xd6, 0xf4,
	0x47, 0x4c, 0x4b, 0x76, 0xc1, 0x85, 0x3f, 0x80, 0xc4, 0x28, 0x58, 0x6a, 0x8b, 0x71, 0xc4, 0x05,
	0x09, 0x59, 0x63, 0xef, 0x64, 0xbd, 0x60, 0xef, 0x4c, 0x76, 0xc6, 0x26, 0x3d, 0x20, 0x01, 0x57,
	0x4e, 0x08, 0x21, 0x71, 0xe9, 0x09, 0x71, 0x42, 0x88, 0x23, 0xff, 0x02, 0xdc, 0x90, 0xf8, 0x07,
	0x50, 0xe0, 0x0f, 0x41, 0x33, 0xde, 0xb4, 0xeb, 0xcd, 0x8e, 0x63, 0xfb, 0xb6, 0xf3, 0xde, 0xf7,
	0xf9, 0xfb, 0xd9, 0xa7, 0xf5, 0x9b, 0x07, 0xe5, 0x21, 0x15, 0x01, 0xe7, 0xae, 0xa0, 0x54, 0xba,
	0x3e, 0x15, 0xae, 0x54, 0x54, 0x8d, 0xa4, 0x2b, 0x62, 0xae, 0x38, 0x2e, 0xe6, 0x67, 0x9d, 0x9d,
	0x74, 0x3c, 0xa9, 0xf0, 0xa9, 0xa2, 0x93, 0x32, 0x67, 0x2f, 0x08, 0x55, 0x7f, 0xd4, 0x75, 0x7b,
	0x7c, 0xe8, 0x05, 0x3c, 0xe0, 0x9e, 0x09, 0x77, 0x47, 0xc7, 0xe6, 0x64, 0x0e, 0xe6, 0x29, 0x91,
	0x97, 0x03, 0xce, 0x83, 0x01, 0xf3, 0xa8, 0x08, 0x3d, 0x1a, 0x45, 0x5c, 0x51, 0x15, 0xf2, 0x28,
	0x61, 0x20, 0xbb, 0xf0, 0xea, 0x41, 0xcc, 0xa8, 0x62, 0x0d, 0xaa, 0x68, 0x97, 0x4a, 0xd6, 0x66,
	0x27, 0x18, 0x43, 0x21, 0xa2, 0x43, 0x56, 0x42, 0x55, 0x54, 0x5b, 0x6f, 0x9b, 0x67, 0xf2, 0x01,
	0xe0, 0xac, 0x50, 0x0a, 0x5c, 0x87, 0x82, 0x7e, 0x36, 0xca, 0x8d, 0x7a, 0xc5, 0x4d, 0x93, 0xeb,
	0x84, 0xbb, 0x9f, 0x28, 0x9b, 0xd1, 0x31, 0x6f, 0x1b, 0x2d, 0xd9, 0x83, 0xcd, 0x83, 0x3e, 0xeb,
	0x7d, 0x7e, 0xfe, 0x43, 0x4d, 0xf9, 0xfe, 0x69, 0x28, 0x95, 0xcd, 0xf8, 0x09, 0x94, 0xf2, 0xe5,
	0x4b, 0xda, 0xff, 0x89, 0xa0, 0x7c, 0xc8, 0xd4, 0xe3, 0x30, 0x6a, 0xf0, 0x2f, 0x22, 0x9d, 0x38,
	0xa0, 0xbd, 0x3e, 0x6b, 0x74, 0x8d, 0x86, 0x9d, 0xe0, 0x2a, 0x5c, 0xe7, 0x71, 0x18, 0x74, 0xfc,
	0x6e, 0x27, 0x05, 0x03, 0x3a, 0xd6, 0xe8, 0x3e, 0xa1, 0x43, 0x86, 0x37, 0xe1, 0xa5, 0x3e, 0x1f,
	0xf8, 0x9d, 0xd0, 0x2f, 0xad, 0x54, 0x51, 0xed, 0xe5, 0xf6, 0x9a, 0x3e, 0x36, 0x7d, 0xbc, 0x03,
	0x60, 0x12, 0x03, 0x36, 0x66, 0x83, 0xd2, 0xaa, 0xc9, 0xad, 0xeb, 0xc8, 0x23, 0x1d, 0xc0, 0xdb,
	0xb0, 0xce, 0xbb, 0x9f, 0xb1, 0x9e, 0xd2, 0x95, 0x05, 0x93, 0xbd, 0x36, 0x09, 0x34, 0x7d, 0x5c,
	0x06, 0x18, 0xd2, 0xd3, 0x4e, 0xcc, 0x7a, 0x3a, 0x7b, 0xb5, 0x8a, 0x6a, 0x85, 0xf6, 0xb5, 0x21,
	0x3d, 0x6d, 0xb3, 0x5e, 0xd3, 0xc7, 0xb7, 0xe0, 0xea, 0x20, 0x1c, 0x86, 0xaa, 0xb4, 0x66, 0xca,
	0x26, 0x07, 0x22, 0x61, 0x67, 0xc6, 0xab, 0x2c, 0xd7, 0x20, 0x5c, 0x81, 0x8d, 0x09, 0x44, 0x67,
	0x10, 0x4a, 0x55, 0x5a, 0xa9, 0xae, 0xd6, 0x0a, 0xed, 0xf5, 0x58, 0x63, 0x3c, 0x0a, 0xa5, 0x22,
	0x5f, 0x21, 0x70, 0x1e, 0xf3, 0x31, 0x5b, 0xba, 0x7d, 0x55, 0xb8, 0xee, 0x33, 0xa9, 0x9e, 0x2b,
	0x56, 0x26, 0x0a, 0x1d, 0x4b, 0x14, 0x19, 0x84, 0xd5, 0x2c, 0xc2, 0x47, 0xb0, 0x6d, 0x25, 0x58,
	0xf2, 0xb3, 0xf8, 0x14, 0xb6, 0x1a, 0x6c, 0xb0, 0xf4, 0x3b, 0x5d, 0xd6, 0xb4, 0x16, 0x38, 0xb6,
	0x9f, 0x5f, 0x0e, 0xb8, 0xfe, 0xec, 0x26, 0xdc, 0x68, 0x50, 0x71, 0x64, 0xe6, 0x43, 0x2b, 0xe6,
	0xa7, 0x4f, 0xf1, 0x77, 0x08, 0x5e, 0x09, 0x98, 0x6a, 0xc4, 0xe1, 0x38, 0x8c, 0x82, 0xa3, 0x1e,
	0x8f, 0x19, 0x7e, 0xe0, 0xda, 0xa6, 0xc9, 0xe1, 0xb4, 0xb2, 0xcd, 0x4e, 0x9c, 0x37, 0xe7, 0x17,
	0x4b, 0x41, 0x6e, 0x7f, 0xf3, 0xf7, 0x7f, 0xdf, 0xaf, 0xec, 0x90, 0x6d, 0xcf, 0xa7, 0xc2, 0x9b,
	0xa8, 0xbd, 0xac, 0xff, 0x33, 0x04, 0x78, 0x24, 0x7c, 0x3d, 0x38, 0xd8, 0x38, 0xec, 0xb1, 0x09,
	0x2f, 0x76, 0xad, 0x4e, 0x1f, 0x5f, 0x10, 0x6b, 0x32, 0x6f, 0x21, 0xbd, 0x14, 0xe4, 0x9e, 0x81,
	0xab, 0x92, 0x4a, 0x1a, 0x2e, 0x07, 0xe4, 0x07, 0x04, 0x37, 0x25, 0x1d, 0x27, 0xc1, 0x83, 0x3e,
	0x8d, 0x02, 0x86, 0xed, 0x7d, 0x38, 0xca, 0x48, 0x35, 0xdb, 0xde, 0x02, 0x6a, 0x29, 0xc8, 0x1d,
	0x43, 0x56, 0x21, 0xe5, 0x34, 0xd9, 0x05, 0x84, 0x5f, 0x11, 0x14, 0x5f, 0x04, 0xdf, 0xeb, 0xa9,
	0x70, 0xcc, 0x8e, 0xe8, 0x31, 0x53, 0x4f, 0x71, 0x7d, 0x0e, 0xbf, 0x74, 0x81, 0x66, 0x7c, 0xb8,
	0x70, 0x8d, 0x14, 0xe4, 0xbe, 0x21, 0xbd, 0x43, 0x48, 0x3e, 0xe9, 0x14, 0xd4, 0x74, 0x1f, 0x3f,
	0xdc, 0x6f, 0xb4, 0x42, 0x7f, 0xae, 0x3e, 0x4e, 0xa4, 0xf3, 0xf6, 0xf1, 0x5c, 0x7d, 0x79, 0x1f,
	0x13, 0x84, 0x9f, 0x11, 0x14, 0x47, 0x62, 0xc0, 0xa9, 0x9f, 0x84, 0x85, 0xbe, 0xfe, 0xf4, 0x65,
	0x32, 0xf3, 0x1b, 0xcc, 0x16, 0x5c, 0xf6, 0x0d, 0x5e, 0xd4, 0xdb, 0xfa, 0x67, 0x81, 0xf9, 0x1a,
	0xc1, 0x86, 0x7e, 0xcd, 0x56, 0xb3, 0xa1, 0xff, 0xe4, 0x78, 0x77, 0x66, 0x33, 0x12, 0x95, 0xa6,
	0xaa, 0xcd, 0x27, 0x94, 0x82, 0xbc, 0x6e, 0x70, 0xb6, 0xc8, 0x66, 0x1a, 0x27, 0xed, 0xf9, 0x25,
	0xc0, 0x21, 0x53, 0xe7, 0xa7, 0x7b, 0xb3, 0x86, 0x41, 0x0a, 0x60, 0x77, 0x2e, 0x9d, 0x14, 0xa4,
	0x62, 0xfc, 0x4b, 0xa4, 0x98, 0xf6, 0x4f, 0x19, 0x7e, 0x8b, 0xe0, 0xc6, 0xf4, 0x8e, 0x81, 0xdf,
	0x70, 0x2d, 0x1b, 0xd4, 0x85, 0xa5, 0xc5, 0xb9, 0x3f, 0xaf, 0x54, 0x0a, 0x42, 0x0c, 0x49, 0x19,
	0x3b, 0x69, 0x92, 0x8c, 0xf5, 0x4f, 0x08, 0x6e, 0xe5, 0x2d, 0x1e, 0xd8, 0xb3, 0x1a, 0xe5, 0x6f,
	0x35, 0xce, 0x5b, 0x8b, 0x15, 0x48, 0x41, 0x6a, 0x86, 0x8f, 0xe0, 0xea, 0x14, 0x5f, 0x1e, 0xcc,
	0xef, 0x08, 0xb6, 0xac, 0x2b, 0x00, 0x7e, 0xc7, 0xe6, 0x3c, 0x6b, 0x01, 0x72, 0xde, 0x5d, 0xa2,
	0x4a, 0x0a, 0xb2, 0x67, 0xa0, 0x77, 0xf1, 0x5d, 0x03, 0xad, 0x62, 0x3a, 0x66, 0x03, 0xcf, 0xce,
	0xf6, 0x1b, 0x82, 0x4d, 0xcb, 0x25, 0x9e, 0x99, 0x70, 0x29, 0x02, 0xfb, 0xde, 0x91, 0x99, 0x70,
	0xf3, 0xd4, 0x48, 0x41, 0x1e, 0x18, 0xe6, 0xbb, 0xf8, 0x76, 0x9a, 0xd9, 0x46, 0xf5, 0x0b, 0x82,
	0x62, 0xfe, 0x25, 0x8e, 0xdf, 0xb6, 0x99, 0x5b, 0x77, 0x0a, 0xa7, 0xbe, 0x68, 0xc9, 0x8b, 0x81,
	0x82, 0x49, 0x1a, 0x37, 0x5f, 0xbf, 0xff, 0xda, 0x1f, 0x67, 0x15, 0xf4, 0xd7, 0x59, 0x05, 0xfd,
	0x73, 0x56, 0x41, 0x3f, 0xfe, 0x5b, 0xb9, 0xf2, 0xc9, 0x2a, 0x15, 0x61, 0xeb, 0x4a, 0x77, 0xcd,
	0x6c, 0xfe, 0x0f, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x31, 0xa5, 0xe4, 0x6a, 0x9d, 0x0c, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DapStatusProxyClient is the client API for DapStatusProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DapStatusProxyClient interface {
	//获取驾驶评分
	GetDrivingScore(ctx context.Context, in *GetDrivingScoreReq, opts ...grpc.CallOption) (*GetDrivingScoreResp, error)
	//更新定位表信息
	UpdateDeviceStatus(ctx context.Context, in *UpdateDeviceStatusReq, opts ...grpc.CallOption) (*UpdateDeviceStatusResp, error)
	//保存设备变更信息
	SaveDeviceChange(ctx context.Context, in *SaveDeviceChangeReq, opts ...grpc.CallOption) (*SaveDeviceChangeResp, error)
	//保存设备主动安全事件
	SaveDeviceActiveSafety(ctx context.Context, in *SaveDeviceActiveSafetyReq, opts ...grpc.CallOption) (*SaveDeviceActiveSafetyResp, error)
	//保存设备OBD信息
	SaveDeviceOBDPid(ctx context.Context, in *SaveDeviceOBDPidReq, opts ...grpc.CallOption) (*SaveDeviceOBDPidResp, error)
	//更新设备单个属性
	UploadDeviceOptionData(ctx context.Context, in *UploadDeviceOptionReq, opts ...grpc.CallOption) (*UploadDeviceOptionResp, error)
	//保存OBD的诊断信息明细
	SavePIDInfo(ctx context.Context, in *SavePIDInfoReq, opts ...grpc.CallOption) (*SavePIDInfoResp, error)
	//分页查询获取OBD的诊断信息明细
	GetPIDInfo(ctx context.Context, in *GetPIDInfoReq, opts ...grpc.CallOption) (*GetPIDInfoResp, error)
	//创建数据库
	CreateDatabase(ctx context.Context, in *CreateDatabaseReq, opts ...grpc.CallOption) (*CreateDatabaseResp, error)
	//判断数据库是否存在
	CheckDatabaseIsExist(ctx context.Context, in *CheckDatabaseIsExistReq, opts ...grpc.CallOption) (*CheckDatabaseIsExistResp, error)
	//获取指令
	GetMinDownInfoCacheDbInfo(ctx context.Context, in *GetMinDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*GetMinDownInfoCacheDbInfoResp, error)
	//迁移指令
	MoveDownInfoCacheDbInfo(ctx context.Context, in *MoveDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*MoveDownInfoCacheDbInfoResp, error)
	//删除指令
	DelDownInfoCacheDbInfo(ctx context.Context, in *DelDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*DelDownInfoCacheDbInfoResp, error)
}

type dapStatusProxyClient struct {
	cc *grpc.ClientConn
}

func NewDapStatusProxyClient(cc *grpc.ClientConn) DapStatusProxyClient {
	return &dapStatusProxyClient{cc}
}

func (c *dapStatusProxyClient) GetDrivingScore(ctx context.Context, in *GetDrivingScoreReq, opts ...grpc.CallOption) (*GetDrivingScoreResp, error) {
	out := new(GetDrivingScoreResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/getDrivingScore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) UpdateDeviceStatus(ctx context.Context, in *UpdateDeviceStatusReq, opts ...grpc.CallOption) (*UpdateDeviceStatusResp, error) {
	out := new(UpdateDeviceStatusResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/updateDeviceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) SaveDeviceChange(ctx context.Context, in *SaveDeviceChangeReq, opts ...grpc.CallOption) (*SaveDeviceChangeResp, error) {
	out := new(SaveDeviceChangeResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/saveDeviceChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) SaveDeviceActiveSafety(ctx context.Context, in *SaveDeviceActiveSafetyReq, opts ...grpc.CallOption) (*SaveDeviceActiveSafetyResp, error) {
	out := new(SaveDeviceActiveSafetyResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/saveDeviceActiveSafety", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) SaveDeviceOBDPid(ctx context.Context, in *SaveDeviceOBDPidReq, opts ...grpc.CallOption) (*SaveDeviceOBDPidResp, error) {
	out := new(SaveDeviceOBDPidResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/saveDeviceOBDPid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) UploadDeviceOptionData(ctx context.Context, in *UploadDeviceOptionReq, opts ...grpc.CallOption) (*UploadDeviceOptionResp, error) {
	out := new(UploadDeviceOptionResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/uploadDeviceOptionData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) SavePIDInfo(ctx context.Context, in *SavePIDInfoReq, opts ...grpc.CallOption) (*SavePIDInfoResp, error) {
	out := new(SavePIDInfoResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/SavePIDInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) GetPIDInfo(ctx context.Context, in *GetPIDInfoReq, opts ...grpc.CallOption) (*GetPIDInfoResp, error) {
	out := new(GetPIDInfoResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/GetPIDInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) CreateDatabase(ctx context.Context, in *CreateDatabaseReq, opts ...grpc.CallOption) (*CreateDatabaseResp, error) {
	out := new(CreateDatabaseResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/CreateDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) CheckDatabaseIsExist(ctx context.Context, in *CheckDatabaseIsExistReq, opts ...grpc.CallOption) (*CheckDatabaseIsExistResp, error) {
	out := new(CheckDatabaseIsExistResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/CheckDatabaseIsExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) GetMinDownInfoCacheDbInfo(ctx context.Context, in *GetMinDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*GetMinDownInfoCacheDbInfoResp, error) {
	out := new(GetMinDownInfoCacheDbInfoResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/GetMinDownInfoCacheDbInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) MoveDownInfoCacheDbInfo(ctx context.Context, in *MoveDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*MoveDownInfoCacheDbInfoResp, error) {
	out := new(MoveDownInfoCacheDbInfoResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/MoveDownInfoCacheDbInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dapStatusProxyClient) DelDownInfoCacheDbInfo(ctx context.Context, in *DelDownInfoCacheDbInfoReq, opts ...grpc.CallOption) (*DelDownInfoCacheDbInfoResp, error) {
	out := new(DelDownInfoCacheDbInfoResp)
	err := c.cc.Invoke(ctx, "/mapgoo.paas.dap.status.DapStatusProxy/DelDownInfoCacheDbInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DapStatusProxyServer is the server API for DapStatusProxy service.
type DapStatusProxyServer interface {
	//获取驾驶评分
	GetDrivingScore(context.Context, *GetDrivingScoreReq) (*GetDrivingScoreResp, error)
	//更新定位表信息
	UpdateDeviceStatus(context.Context, *UpdateDeviceStatusReq) (*UpdateDeviceStatusResp, error)
	//保存设备变更信息
	SaveDeviceChange(context.Context, *SaveDeviceChangeReq) (*SaveDeviceChangeResp, error)
	//保存设备主动安全事件
	SaveDeviceActiveSafety(context.Context, *SaveDeviceActiveSafetyReq) (*SaveDeviceActiveSafetyResp, error)
	//保存设备OBD信息
	SaveDeviceOBDPid(context.Context, *SaveDeviceOBDPidReq) (*SaveDeviceOBDPidResp, error)
	//更新设备单个属性
	UploadDeviceOptionData(context.Context, *UploadDeviceOptionReq) (*UploadDeviceOptionResp, error)
	//保存OBD的诊断信息明细
	SavePIDInfo(context.Context, *SavePIDInfoReq) (*SavePIDInfoResp, error)
	//分页查询获取OBD的诊断信息明细
	GetPIDInfo(context.Context, *GetPIDInfoReq) (*GetPIDInfoResp, error)
	//创建数据库
	CreateDatabase(context.Context, *CreateDatabaseReq) (*CreateDatabaseResp, error)
	//判断数据库是否存在
	CheckDatabaseIsExist(context.Context, *CheckDatabaseIsExistReq) (*CheckDatabaseIsExistResp, error)
	//获取指令
	GetMinDownInfoCacheDbInfo(context.Context, *GetMinDownInfoCacheDbInfoReq) (*GetMinDownInfoCacheDbInfoResp, error)
	//迁移指令
	MoveDownInfoCacheDbInfo(context.Context, *MoveDownInfoCacheDbInfoReq) (*MoveDownInfoCacheDbInfoResp, error)
	//删除指令
	DelDownInfoCacheDbInfo(context.Context, *DelDownInfoCacheDbInfoReq) (*DelDownInfoCacheDbInfoResp, error)
}

// UnimplementedDapStatusProxyServer can be embedded to have forward compatible implementations.
type UnimplementedDapStatusProxyServer struct {
}

func (*UnimplementedDapStatusProxyServer) GetDrivingScore(ctx context.Context, req *GetDrivingScoreReq) (*GetDrivingScoreResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrivingScore not implemented")
}
func (*UnimplementedDapStatusProxyServer) UpdateDeviceStatus(ctx context.Context, req *UpdateDeviceStatusReq) (*UpdateDeviceStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeviceStatus not implemented")
}
func (*UnimplementedDapStatusProxyServer) SaveDeviceChange(ctx context.Context, req *SaveDeviceChangeReq) (*SaveDeviceChangeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveDeviceChange not implemented")
}
func (*UnimplementedDapStatusProxyServer) SaveDeviceActiveSafety(ctx context.Context, req *SaveDeviceActiveSafetyReq) (*SaveDeviceActiveSafetyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveDeviceActiveSafety not implemented")
}
func (*UnimplementedDapStatusProxyServer) SaveDeviceOBDPid(ctx context.Context, req *SaveDeviceOBDPidReq) (*SaveDeviceOBDPidResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveDeviceOBDPid not implemented")
}
func (*UnimplementedDapStatusProxyServer) UploadDeviceOptionData(ctx context.Context, req *UploadDeviceOptionReq) (*UploadDeviceOptionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadDeviceOptionData not implemented")
}
func (*UnimplementedDapStatusProxyServer) SavePIDInfo(ctx context.Context, req *SavePIDInfoReq) (*SavePIDInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SavePIDInfo not implemented")
}
func (*UnimplementedDapStatusProxyServer) GetPIDInfo(ctx context.Context, req *GetPIDInfoReq) (*GetPIDInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPIDInfo not implemented")
}
func (*UnimplementedDapStatusProxyServer) CreateDatabase(ctx context.Context, req *CreateDatabaseReq) (*CreateDatabaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatabase not implemented")
}
func (*UnimplementedDapStatusProxyServer) CheckDatabaseIsExist(ctx context.Context, req *CheckDatabaseIsExistReq) (*CheckDatabaseIsExistResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckDatabaseIsExist not implemented")
}
func (*UnimplementedDapStatusProxyServer) GetMinDownInfoCacheDbInfo(ctx context.Context, req *GetMinDownInfoCacheDbInfoReq) (*GetMinDownInfoCacheDbInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinDownInfoCacheDbInfo not implemented")
}
func (*UnimplementedDapStatusProxyServer) MoveDownInfoCacheDbInfo(ctx context.Context, req *MoveDownInfoCacheDbInfoReq) (*MoveDownInfoCacheDbInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveDownInfoCacheDbInfo not implemented")
}
func (*UnimplementedDapStatusProxyServer) DelDownInfoCacheDbInfo(ctx context.Context, req *DelDownInfoCacheDbInfoReq) (*DelDownInfoCacheDbInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelDownInfoCacheDbInfo not implemented")
}

func RegisterDapStatusProxyServer(s *grpc.Server, srv DapStatusProxyServer) {
	s.RegisterService(&_DapStatusProxy_serviceDesc, srv)
}

func _DapStatusProxy_GetDrivingScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDrivingScoreReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).GetDrivingScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/GetDrivingScore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).GetDrivingScore(ctx, req.(*GetDrivingScoreReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_UpdateDeviceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).UpdateDeviceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/UpdateDeviceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).UpdateDeviceStatus(ctx, req.(*UpdateDeviceStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_SaveDeviceChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDeviceChangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).SaveDeviceChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/SaveDeviceChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).SaveDeviceChange(ctx, req.(*SaveDeviceChangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_SaveDeviceActiveSafety_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDeviceActiveSafetyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).SaveDeviceActiveSafety(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/SaveDeviceActiveSafety",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).SaveDeviceActiveSafety(ctx, req.(*SaveDeviceActiveSafetyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_SaveDeviceOBDPid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDeviceOBDPidReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).SaveDeviceOBDPid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/SaveDeviceOBDPid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).SaveDeviceOBDPid(ctx, req.(*SaveDeviceOBDPidReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_UploadDeviceOptionData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadDeviceOptionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).UploadDeviceOptionData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/UploadDeviceOptionData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).UploadDeviceOptionData(ctx, req.(*UploadDeviceOptionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_SavePIDInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePIDInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).SavePIDInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/SavePIDInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).SavePIDInfo(ctx, req.(*SavePIDInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_GetPIDInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPIDInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).GetPIDInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/GetPIDInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).GetPIDInfo(ctx, req.(*GetPIDInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_CreateDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDatabaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).CreateDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/CreateDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).CreateDatabase(ctx, req.(*CreateDatabaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_CheckDatabaseIsExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckDatabaseIsExistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).CheckDatabaseIsExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/CheckDatabaseIsExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).CheckDatabaseIsExist(ctx, req.(*CheckDatabaseIsExistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_GetMinDownInfoCacheDbInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinDownInfoCacheDbInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).GetMinDownInfoCacheDbInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/GetMinDownInfoCacheDbInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).GetMinDownInfoCacheDbInfo(ctx, req.(*GetMinDownInfoCacheDbInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_MoveDownInfoCacheDbInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveDownInfoCacheDbInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).MoveDownInfoCacheDbInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/MoveDownInfoCacheDbInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).MoveDownInfoCacheDbInfo(ctx, req.(*MoveDownInfoCacheDbInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DapStatusProxy_DelDownInfoCacheDbInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelDownInfoCacheDbInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DapStatusProxyServer).DelDownInfoCacheDbInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mapgoo.paas.dap.status.DapStatusProxy/DelDownInfoCacheDbInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DapStatusProxyServer).DelDownInfoCacheDbInfo(ctx, req.(*DelDownInfoCacheDbInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DapStatusProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mapgoo.paas.dap.status.DapStatusProxy",
	HandlerType: (*DapStatusProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getDrivingScore",
			Handler:    _DapStatusProxy_GetDrivingScore_Handler,
		},
		{
			MethodName: "updateDeviceStatus",
			Handler:    _DapStatusProxy_UpdateDeviceStatus_Handler,
		},
		{
			MethodName: "saveDeviceChange",
			Handler:    _DapStatusProxy_SaveDeviceChange_Handler,
		},
		{
			MethodName: "saveDeviceActiveSafety",
			Handler:    _DapStatusProxy_SaveDeviceActiveSafety_Handler,
		},
		{
			MethodName: "saveDeviceOBDPid",
			Handler:    _DapStatusProxy_SaveDeviceOBDPid_Handler,
		},
		{
			MethodName: "uploadDeviceOptionData",
			Handler:    _DapStatusProxy_UploadDeviceOptionData_Handler,
		},
		{
			MethodName: "SavePIDInfo",
			Handler:    _DapStatusProxy_SavePIDInfo_Handler,
		},
		{
			MethodName: "GetPIDInfo",
			Handler:    _DapStatusProxy_GetPIDInfo_Handler,
		},
		{
			MethodName: "CreateDatabase",
			Handler:    _DapStatusProxy_CreateDatabase_Handler,
		},
		{
			MethodName: "CheckDatabaseIsExist",
			Handler:    _DapStatusProxy_CheckDatabaseIsExist_Handler,
		},
		{
			MethodName: "GetMinDownInfoCacheDbInfo",
			Handler:    _DapStatusProxy_GetMinDownInfoCacheDbInfo_Handler,
		},
		{
			MethodName: "MoveDownInfoCacheDbInfo",
			Handler:    _DapStatusProxy_MoveDownInfoCacheDbInfo_Handler,
		},
		{
			MethodName: "DelDownInfoCacheDbInfo",
			Handler:    _DapStatusProxy_DelDownInfoCacheDbInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mapgoo.paas.dap.status.proto",
}

func (m *CreateDatabaseReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateDatabaseReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateDatabaseReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateDatabaseResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateDatabaseResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateDatabaseResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckDatabaseIsExistReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckDatabaseIsExistReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckDatabaseIsExistReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckDatabaseIsExistResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckDatabaseIsExistResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckDatabaseIsExistResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMinDownInfoCacheDbInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMinDownInfoCacheDbInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMinDownInfoCacheDbInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.MaxRecId != 0 {
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(m.MaxRecId))
		i--
		dAtA[i] = 0x28
	}
	if m.ObjectId != 0 {
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(m.ObjectId))
		i--
		dAtA[i] = 0x20
	}
	if m.HoldLevel != 0 {
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(m.HoldLevel))
		i--
		dAtA[i] = 0x18
	}
	if m.HoldId != 0 {
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(m.HoldId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.OrigDbName) > 0 {
		i -= len(m.OrigDbName)
		copy(dAtA[i:], m.OrigDbName)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.OrigDbName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMinDownInfoCacheDbInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMinDownInfoCacheDbInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMinDownInfoCacheDbInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RecIdList) > 0 {
		dAtA4 := make([]byte, len(m.RecIdList)*10)
		var j3 int
		for _, num := range m.RecIdList {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x12
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MoveDownInfoCacheDbInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MoveDownInfoCacheDbInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MoveDownInfoCacheDbInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RecIdList) > 0 {
		dAtA7 := make([]byte, len(m.RecIdList)*10)
		var j6 int
		for _, num := range m.RecIdList {
			for num >= 1<<7 {
				dAtA7[j6] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j6++
			}
			dAtA7[j6] = uint8(num)
			j6++
		}
		i -= j6
		copy(dAtA[i:], dAtA7[:j6])
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(j6))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DestDbName) > 0 {
		i -= len(m.DestDbName)
		copy(dAtA[i:], m.DestDbName)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.DestDbName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OrigDbName) > 0 {
		i -= len(m.OrigDbName)
		copy(dAtA[i:], m.OrigDbName)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.OrigDbName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MoveDownInfoCacheDbInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MoveDownInfoCacheDbInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MoveDownInfoCacheDbInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DelDownInfoCacheDbInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelDownInfoCacheDbInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelDownInfoCacheDbInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RecIdList) > 0 {
		dAtA10 := make([]byte, len(m.RecIdList)*10)
		var j9 int
		for _, num := range m.RecIdList {
			for num >= 1<<7 {
				dAtA10[j9] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j9++
			}
			dAtA10[j9] = uint8(num)
			j9++
		}
		i -= j9
		copy(dAtA[i:], dAtA10[:j9])
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(j9))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OrigDbName) > 0 {
		i -= len(m.OrigDbName)
		copy(dAtA[i:], m.OrigDbName)
		i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(len(m.OrigDbName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DelDownInfoCacheDbInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelDownInfoCacheDbInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelDownInfoCacheDbInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasDapStatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMapgooPaasDapStatus(dAtA []byte, offset int, v uint64) int {
	offset -= sovMapgooPaasDapStatus(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateDatabaseReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateDatabaseResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckDatabaseIsExistReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckDatabaseIsExistResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMinDownInfoCacheDbInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrigDbName)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.HoldId != 0 {
		n += 1 + sovMapgooPaasDapStatus(uint64(m.HoldId))
	}
	if m.HoldLevel != 0 {
		n += 1 + sovMapgooPaasDapStatus(uint64(m.HoldLevel))
	}
	if m.ObjectId != 0 {
		n += 1 + sovMapgooPaasDapStatus(uint64(m.ObjectId))
	}
	if m.MaxRecId != 0 {
		n += 1 + sovMapgooPaasDapStatus(uint64(m.MaxRecId))
	}
	if m.Limit != 0 {
		n += 1 + sovMapgooPaasDapStatus(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMinDownInfoCacheDbInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if len(m.RecIdList) > 0 {
		l = 0
		for _, e := range m.RecIdList {
			l += sovMapgooPaasDapStatus(uint64(e))
		}
		n += 1 + sovMapgooPaasDapStatus(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MoveDownInfoCacheDbInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrigDbName)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	l = len(m.DestDbName)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if len(m.RecIdList) > 0 {
		l = 0
		for _, e := range m.RecIdList {
			l += sovMapgooPaasDapStatus(uint64(e))
		}
		n += 1 + sovMapgooPaasDapStatus(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MoveDownInfoCacheDbInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelDownInfoCacheDbInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrigDbName)
	if l > 0 {
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if len(m.RecIdList) > 0 {
		l = 0
		for _, e := range m.RecIdList {
			l += sovMapgooPaasDapStatus(uint64(e))
		}
		n += 1 + sovMapgooPaasDapStatus(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelDownInfoCacheDbInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasDapStatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMapgooPaasDapStatus(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMapgooPaasDapStatus(x uint64) (n int) {
	return sovMapgooPaasDapStatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateDatabaseReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateDatabaseReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateDatabaseReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateDatabaseResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateDatabaseResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateDatabaseResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckDatabaseIsExistReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckDatabaseIsExistReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckDatabaseIsExistReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckDatabaseIsExistResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckDatabaseIsExistResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckDatabaseIsExistResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMinDownInfoCacheDbInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMinDownInfoCacheDbInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMinDownInfoCacheDbInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDbName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigDbName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldId", wireType)
			}
			m.HoldId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HoldId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HoldLevel", wireType)
			}
			m.HoldLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HoldLevel |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxRecId", wireType)
			}
			m.MaxRecId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxRecId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMinDownInfoCacheDbInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMinDownInfoCacheDbInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMinDownInfoCacheDbInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RecIdList = append(m.RecIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RecIdList) == 0 {
					m.RecIdList = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMapgooPaasDapStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RecIdList = append(m.RecIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RecIdList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MoveDownInfoCacheDbInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MoveDownInfoCacheDbInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MoveDownInfoCacheDbInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDbName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigDbName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestDbName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DestDbName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RecIdList = append(m.RecIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RecIdList) == 0 {
					m.RecIdList = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMapgooPaasDapStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RecIdList = append(m.RecIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RecIdList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MoveDownInfoCacheDbInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MoveDownInfoCacheDbInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MoveDownInfoCacheDbInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelDownInfoCacheDbInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelDownInfoCacheDbInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelDownInfoCacheDbInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigDbName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigDbName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RecIdList = append(m.RecIdList, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMapgooPaasDapStatus
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMapgooPaasDapStatus
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RecIdList) == 0 {
					m.RecIdList = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMapgooPaasDapStatus
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RecIdList = append(m.RecIdList, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RecIdList", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelDownInfoCacheDbInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelDownInfoCacheDbInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelDownInfoCacheDbInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasDapStatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasDapStatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMapgooPaasDapStatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMapgooPaasDapStatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMapgooPaasDapStatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMapgooPaasDapStatus
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMapgooPaasDapStatus
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMapgooPaasDapStatus
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMapgooPaasDapStatus        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMapgooPaasDapStatus          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMapgooPaasDapStatus = fmt.Errorf("proto: unexpected end of group")
)
