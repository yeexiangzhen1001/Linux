// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mapgoo.paas.video.data.proto

package api

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//视频信息上报
type SaveVideoInfoReq struct {
	//imei
	Imei string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	//视频信息
	Data                 []*SaveVideoInfoData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SaveVideoInfoReq) Reset()         { *m = SaveVideoInfoReq{} }
func (m *SaveVideoInfoReq) String() string { return proto.CompactTextString(m) }
func (*SaveVideoInfoReq) ProtoMessage()    {}
func (*SaveVideoInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{0}
}
func (m *SaveVideoInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveVideoInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveVideoInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveVideoInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVideoInfoReq.Merge(m, src)
}
func (m *SaveVideoInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *SaveVideoInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVideoInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVideoInfoReq proto.InternalMessageInfo

func (m *SaveVideoInfoReq) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SaveVideoInfoReq) GetData() []*SaveVideoInfoData {
	if m != nil {
		return m.Data
	}
	return nil
}

type SaveVideoInfoData struct {
	//摄像头通道
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index"`
	//时间
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	//状态key
	StateKey uint32 `protobuf:"varint,3,opt,name=state_key,json=stateKey,proto3" json:"stateKey"`
	//状态
	StateValue           uint64   `protobuf:"varint,4,opt,name=state_value,json=stateValue,proto3" json:"stateValue"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVideoInfoData) Reset()         { *m = SaveVideoInfoData{} }
func (m *SaveVideoInfoData) String() string { return proto.CompactTextString(m) }
func (*SaveVideoInfoData) ProtoMessage()    {}
func (*SaveVideoInfoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{1}
}
func (m *SaveVideoInfoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveVideoInfoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveVideoInfoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveVideoInfoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVideoInfoData.Merge(m, src)
}
func (m *SaveVideoInfoData) XXX_Size() int {
	return m.Size()
}
func (m *SaveVideoInfoData) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVideoInfoData.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVideoInfoData proto.InternalMessageInfo

func (m *SaveVideoInfoData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SaveVideoInfoData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SaveVideoInfoData) GetStateKey() uint32 {
	if m != nil {
		return m.StateKey
	}
	return 0
}

func (m *SaveVideoInfoData) GetStateValue() uint64 {
	if m != nil {
		return m.StateValue
	}
	return 0
}

type SaveVideoInfoResp struct {
	//错误码
	Error                uint32   `protobuf:"varint,1,opt,name=error,proto3" json:"error"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVideoInfoResp) Reset()         { *m = SaveVideoInfoResp{} }
func (m *SaveVideoInfoResp) String() string { return proto.CompactTextString(m) }
func (*SaveVideoInfoResp) ProtoMessage()    {}
func (*SaveVideoInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{2}
}
func (m *SaveVideoInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveVideoInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveVideoInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveVideoInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVideoInfoResp.Merge(m, src)
}
func (m *SaveVideoInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *SaveVideoInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVideoInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVideoInfoResp proto.InternalMessageInfo

func (m *SaveVideoInfoResp) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *SaveVideoInfoResp) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *SaveVideoInfoResp) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type SearchVideoInfoData struct {
	//摄像头通道
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index"`
	//时间
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	//状态key
	StateKey uint32 `protobuf:"varint,3,opt,name=state_key,json=stateKey,proto3" json:"stateKey"`
	//状态
	StateValue uint64 `protobuf:"varint,4,opt,name=state_value,json=stateValue,proto3" json:"stateValue"`
	//imei
	Imei string `protobuf:"bytes,5,opt,name=imei,proto3" json:"imei"`
	//文档id
	Id string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	//索引
	Esindex              string   `protobuf:"bytes,7,opt,name=esindex,proto3" json:"esindex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideoInfoData) Reset()         { *m = SearchVideoInfoData{} }
func (m *SearchVideoInfoData) String() string { return proto.CompactTextString(m) }
func (*SearchVideoInfoData) ProtoMessage()    {}
func (*SearchVideoInfoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{3}
}
func (m *SearchVideoInfoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoInfoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoInfoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoInfoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoInfoData.Merge(m, src)
}
func (m *SearchVideoInfoData) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoInfoData) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoInfoData.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoInfoData proto.InternalMessageInfo

func (m *SearchVideoInfoData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SearchVideoInfoData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SearchVideoInfoData) GetStateKey() uint32 {
	if m != nil {
		return m.StateKey
	}
	return 0
}

func (m *SearchVideoInfoData) GetStateValue() uint64 {
	if m != nil {
		return m.StateValue
	}
	return 0
}

func (m *SearchVideoInfoData) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SearchVideoInfoData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchVideoInfoData) GetEsindex() string {
	if m != nil {
		return m.Esindex
	}
	return ""
}

//视频信息上报
type SearchVideoInfoReq struct {
	//描述
	Imei string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	//当前页
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	//数量、每页
	Psize uint32 `protobuf:"varint,3,opt,name=psize,proto3" json:"psize,omitempty"`
	//开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"startTime"`
	//结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"endTime"`
	//是否显示索引id
	IsIndex              bool     `protobuf:"varint,6,opt,name=is_index,json=isIndex,proto3" json:"isIndex"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideoInfoReq) Reset()         { *m = SearchVideoInfoReq{} }
func (m *SearchVideoInfoReq) String() string { return proto.CompactTextString(m) }
func (*SearchVideoInfoReq) ProtoMessage()    {}
func (*SearchVideoInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{4}
}
func (m *SearchVideoInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoInfoReq.Merge(m, src)
}
func (m *SearchVideoInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoInfoReq proto.InternalMessageInfo

func (m *SearchVideoInfoReq) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SearchVideoInfoReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchVideoInfoReq) GetPsize() uint32 {
	if m != nil {
		return m.Psize
	}
	return 0
}

func (m *SearchVideoInfoReq) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *SearchVideoInfoReq) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *SearchVideoInfoReq) GetIsIndex() bool {
	if m != nil {
		return m.IsIndex
	}
	return false
}

type SearchVideoInfoResp struct {
	//公共结构
	Base *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	//视频信息
	DataList []*SearchVideoInfoData `protobuf:"bytes,2,rep,name=data_list,json=dataList,proto3" json:"dataList"`
	//分页信息
	Page_Info            *PageBaseInfo `protobuf:"bytes,3,opt,name=page_Info,json=pageInfo,proto3" json:"pageInfo"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SearchVideoInfoResp) Reset()         { *m = SearchVideoInfoResp{} }
func (m *SearchVideoInfoResp) String() string { return proto.CompactTextString(m) }
func (*SearchVideoInfoResp) ProtoMessage()    {}
func (*SearchVideoInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{5}
}
func (m *SearchVideoInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoInfoResp.Merge(m, src)
}
func (m *SearchVideoInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoInfoResp proto.InternalMessageInfo

func (m *SearchVideoInfoResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SearchVideoInfoResp) GetDataList() []*SearchVideoInfoData {
	if m != nil {
		return m.DataList
	}
	return nil
}

func (m *SearchVideoInfoResp) GetPage_Info() *PageBaseInfo {
	if m != nil {
		return m.Page_Info
	}
	return nil
}

//视频错误信息上报
type SaveVideoErrCodeReq struct {
	//imei
	Imei string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	//视频信息
	Data                 []*VideoErrData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SaveVideoErrCodeReq) Reset()         { *m = SaveVideoErrCodeReq{} }
func (m *SaveVideoErrCodeReq) String() string { return proto.CompactTextString(m) }
func (*SaveVideoErrCodeReq) ProtoMessage()    {}
func (*SaveVideoErrCodeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{6}
}
func (m *SaveVideoErrCodeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveVideoErrCodeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveVideoErrCodeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveVideoErrCodeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVideoErrCodeReq.Merge(m, src)
}
func (m *SaveVideoErrCodeReq) XXX_Size() int {
	return m.Size()
}
func (m *SaveVideoErrCodeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVideoErrCodeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVideoErrCodeReq proto.InternalMessageInfo

func (m *SaveVideoErrCodeReq) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SaveVideoErrCodeReq) GetData() []*VideoErrData {
	if m != nil {
		return m.Data
	}
	return nil
}

type VideoErrData struct {
	//摄像头通道
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index"`
	//时间
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	//错误码
	ErrorCode            uint32   `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"errorCode"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoErrData) Reset()         { *m = VideoErrData{} }
func (m *VideoErrData) String() string { return proto.CompactTextString(m) }
func (*VideoErrData) ProtoMessage()    {}
func (*VideoErrData) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{7}
}
func (m *VideoErrData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoErrData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoErrData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoErrData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoErrData.Merge(m, src)
}
func (m *VideoErrData) XXX_Size() int {
	return m.Size()
}
func (m *VideoErrData) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoErrData.DiscardUnknown(m)
}

var xxx_messageInfo_VideoErrData proto.InternalMessageInfo

func (m *VideoErrData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *VideoErrData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VideoErrData) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type SaveVideoErrCodeResp struct {
	//错误码
	Error                uint32   `protobuf:"varint,1,opt,name=error,proto3" json:"error"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveVideoErrCodeResp) Reset()         { *m = SaveVideoErrCodeResp{} }
func (m *SaveVideoErrCodeResp) String() string { return proto.CompactTextString(m) }
func (*SaveVideoErrCodeResp) ProtoMessage()    {}
func (*SaveVideoErrCodeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{8}
}
func (m *SaveVideoErrCodeResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveVideoErrCodeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveVideoErrCodeResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveVideoErrCodeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveVideoErrCodeResp.Merge(m, src)
}
func (m *SaveVideoErrCodeResp) XXX_Size() int {
	return m.Size()
}
func (m *SaveVideoErrCodeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveVideoErrCodeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SaveVideoErrCodeResp proto.InternalMessageInfo

func (m *SaveVideoErrCodeResp) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *SaveVideoErrCodeResp) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *SaveVideoErrCodeResp) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

//删除视频信息
type DelVideoIndexReq struct {
	//文档索引
	Index string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	//文档id
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelVideoIndexReq) Reset()         { *m = DelVideoIndexReq{} }
func (m *DelVideoIndexReq) String() string { return proto.CompactTextString(m) }
func (*DelVideoIndexReq) ProtoMessage()    {}
func (*DelVideoIndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{9}
}
func (m *DelVideoIndexReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelVideoIndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelVideoIndexReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelVideoIndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelVideoIndexReq.Merge(m, src)
}
func (m *DelVideoIndexReq) XXX_Size() int {
	return m.Size()
}
func (m *DelVideoIndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelVideoIndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelVideoIndexReq proto.InternalMessageInfo

func (m *DelVideoIndexReq) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *DelVideoIndexReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DelVideoIndexResp struct {
	//公共结构
	Base                 *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DelVideoIndexResp) Reset()         { *m = DelVideoIndexResp{} }
func (m *DelVideoIndexResp) String() string { return proto.CompactTextString(m) }
func (*DelVideoIndexResp) ProtoMessage()    {}
func (*DelVideoIndexResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{10}
}
func (m *DelVideoIndexResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DelVideoIndexResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DelVideoIndexResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DelVideoIndexResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelVideoIndexResp.Merge(m, src)
}
func (m *DelVideoIndexResp) XXX_Size() int {
	return m.Size()
}
func (m *DelVideoIndexResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelVideoIndexResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelVideoIndexResp proto.InternalMessageInfo

func (m *DelVideoIndexResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

//视频信息上报
type SearchVideoErrInfoReq struct {
	//描述
	Imei string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	//当前页
	Page uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	//数量、每页
	Psize uint32 `protobuf:"varint,3,opt,name=psize,proto3" json:"psize,omitempty"`
	//开始时间
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"startTime"`
	//结束时间
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"endTime"`
	//是否显示索引id
	IsIndex              bool     `protobuf:"varint,6,opt,name=is_index,json=isIndex,proto3" json:"isIndex"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideoErrInfoReq) Reset()         { *m = SearchVideoErrInfoReq{} }
func (m *SearchVideoErrInfoReq) String() string { return proto.CompactTextString(m) }
func (*SearchVideoErrInfoReq) ProtoMessage()    {}
func (*SearchVideoErrInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{11}
}
func (m *SearchVideoErrInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoErrInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoErrInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoErrInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoErrInfoReq.Merge(m, src)
}
func (m *SearchVideoErrInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoErrInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoErrInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoErrInfoReq proto.InternalMessageInfo

func (m *SearchVideoErrInfoReq) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SearchVideoErrInfoReq) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchVideoErrInfoReq) GetPsize() uint32 {
	if m != nil {
		return m.Psize
	}
	return 0
}

func (m *SearchVideoErrInfoReq) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *SearchVideoErrInfoReq) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *SearchVideoErrInfoReq) GetIsIndex() bool {
	if m != nil {
		return m.IsIndex
	}
	return false
}

type SearchVideoErrInfoResp struct {
	//公共结构
	Base *BaseRespInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	//视频信息
	DataList []*SearchVideoErrInfoData `protobuf:"bytes,2,rep,name=data_list,json=dataList,proto3" json:"dataList"`
	//分页信息
	Page_Info            *PageBaseInfo `protobuf:"bytes,3,opt,name=page_Info,json=pageInfo,proto3" json:"pageInfo"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SearchVideoErrInfoResp) Reset()         { *m = SearchVideoErrInfoResp{} }
func (m *SearchVideoErrInfoResp) String() string { return proto.CompactTextString(m) }
func (*SearchVideoErrInfoResp) ProtoMessage()    {}
func (*SearchVideoErrInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{12}
}
func (m *SearchVideoErrInfoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoErrInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoErrInfoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoErrInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoErrInfoResp.Merge(m, src)
}
func (m *SearchVideoErrInfoResp) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoErrInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoErrInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoErrInfoResp proto.InternalMessageInfo

func (m *SearchVideoErrInfoResp) GetBase() *BaseRespInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SearchVideoErrInfoResp) GetDataList() []*SearchVideoErrInfoData {
	if m != nil {
		return m.DataList
	}
	return nil
}

func (m *SearchVideoErrInfoResp) GetPage_Info() *PageBaseInfo {
	if m != nil {
		return m.Page_Info
	}
	return nil
}

type SearchVideoErrInfoData struct {
	//摄像头通道
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index"`
	//时间
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp"`
	//错误码
	ErrorCode uint32 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"errorCode"`
	//imei
	Imei string `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei"`
	//文档id
	Id string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	//索引
	Esindex              string   `protobuf:"bytes,6,opt,name=esindex,proto3" json:"esindex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVideoErrInfoData) Reset()         { *m = SearchVideoErrInfoData{} }
func (m *SearchVideoErrInfoData) String() string { return proto.CompactTextString(m) }
func (*SearchVideoErrInfoData) ProtoMessage()    {}
func (*SearchVideoErrInfoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_64b2e0a52f39ec77, []int{13}
}
func (m *SearchVideoErrInfoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SearchVideoErrInfoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SearchVideoErrInfoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SearchVideoErrInfoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVideoErrInfoData.Merge(m, src)
}
func (m *SearchVideoErrInfoData) XXX_Size() int {
	return m.Size()
}
func (m *SearchVideoErrInfoData) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVideoErrInfoData.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVideoErrInfoData proto.InternalMessageInfo

func (m *SearchVideoErrInfoData) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SearchVideoErrInfoData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SearchVideoErrInfoData) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *SearchVideoErrInfoData) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *SearchVideoErrInfoData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchVideoErrInfoData) GetEsindex() string {
	if m != nil {
		return m.Esindex
	}
	return ""
}

func init() {
	proto.RegisterType((*SaveVideoInfoReq)(nil), "mapgoo.paas.video.data.SaveVideoInfoReq")
	proto.RegisterType((*SaveVideoInfoData)(nil), "mapgoo.paas.video.data.SaveVideoInfoData")
	proto.RegisterType((*SaveVideoInfoResp)(nil), "mapgoo.paas.video.data.SaveVideoInfoResp")
	proto.RegisterType((*SearchVideoInfoData)(nil), "mapgoo.paas.video.data.SearchVideoInfoData")
	proto.RegisterType((*SearchVideoInfoReq)(nil), "mapgoo.paas.video.data.SearchVideoInfoReq")
	proto.RegisterType((*SearchVideoInfoResp)(nil), "mapgoo.paas.video.data.SearchVideoInfoResp")
	proto.RegisterType((*SaveVideoErrCodeReq)(nil), "mapgoo.paas.video.data.SaveVideoErrCodeReq")
	proto.RegisterType((*VideoErrData)(nil), "mapgoo.paas.video.data.VideoErrData")
	proto.RegisterType((*SaveVideoErrCodeResp)(nil), "mapgoo.paas.video.data.SaveVideoErrCodeResp")
	proto.RegisterType((*DelVideoIndexReq)(nil), "mapgoo.paas.video.data.DelVideoIndexReq")
	proto.RegisterType((*DelVideoIndexResp)(nil), "mapgoo.paas.video.data.DelVideoIndexResp")
	proto.RegisterType((*SearchVideoErrInfoReq)(nil), "mapgoo.paas.video.data.SearchVideoErrInfoReq")
	proto.RegisterType((*SearchVideoErrInfoResp)(nil), "mapgoo.paas.video.data.SearchVideoErrInfoResp")
	proto.RegisterType((*SearchVideoErrInfoData)(nil), "mapgoo.paas.video.data.SearchVideoErrInfoData")
}

func init() { proto.RegisterFile("mapgoo.paas.video.data.proto", fileDescriptor_64b2e0a52f39ec77) }

var fileDescriptor_64b2e0a52f39ec77 = []byte{
	// 755 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xcf, 0x6b, 0x1b, 0x39,
	0x14, 0xce, 0x38, 0xb6, 0xe3, 0x79, 0x4e, 0x42, 0xa2, 0xfc, 0xc0, 0x84, 0xe0, 0x09, 0xc3, 0xb2,
	0x24, 0x24, 0x3b, 0x86, 0xec, 0x25, 0x97, 0xbd, 0x78, 0x13, 0x96, 0xb0, 0x7b, 0x08, 0xca, 0x12,
	0x68, 0x2f, 0x46, 0xf6, 0x28, 0x13, 0x51, 0x7b, 0x34, 0x19, 0x8d, 0x43, 0x53, 0x0a, 0x3d, 0x16,
	0xfa, 0x17, 0xf4, 0x9f, 0xe9, 0xbd, 0xc7, 0x40, 0xaf, 0xc5, 0x94, 0xf4, 0x66, 0x7a, 0xea, 0x5f,
	0x50, 0xf4, 0x34, 0xfe, 0x15, 0xdb, 0xa5, 0x84, 0x92, 0xd2, 0x9e, 0xe6, 0xe9, 0xd3, 0x27, 0xf9,
	0x7d, 0x4f, 0xef, 0x93, 0x0c, 0x9b, 0x2d, 0x16, 0x05, 0x52, 0x7a, 0x11, 0x63, 0xca, 0xbb, 0x12,
	0x3e, 0x97, 0x9e, 0xcf, 0x12, 0xe6, 0x45, 0xb1, 0x4c, 0x24, 0x59, 0x9f, 0x3c, 0xbb, 0x31, 0x82,
	0xd7, 0x99, 0xe2, 0x86, 0xbf, 0xf1, 0x47, 0x20, 0x92, 0x8b, 0x76, 0xdd, 0x6b, 0xc8, 0x56, 0x25,
	0x90, 0x81, 0xac, 0x20, 0x5c, 0x6f, 0x9f, 0xe3, 0x08, 0x07, 0x18, 0xa5, 0xf4, 0xcd, 0x40, 0xca,
	0xa0, 0xc9, 0x2b, 0x2c, 0x12, 0x15, 0x16, 0x86, 0x32, 0x61, 0x89, 0x90, 0xa1, 0x32, 0xb3, 0x2e,
	0x87, 0xa5, 0x53, 0x76, 0xc5, 0xcf, 0xf4, 0xcf, 0x1e, 0x87, 0xe7, 0x92, 0xf2, 0x4b, 0x42, 0x20,
	0x2b, 0x5a, 0x5c, 0x94, 0xac, 0x2d, 0x6b, 0xdb, 0xa6, 0x18, 0x93, 0xbf, 0x20, 0xab, 0x93, 0x2a,
	0x65, 0xb6, 0x66, 0xb7, 0x8b, 0xfb, 0x3b, 0xde, 0x14, 0x45, 0x23, 0x7b, 0x1d, 0xb2, 0x84, 0x51,
	0x5c, 0xe6, 0xbe, 0xb1, 0x60, 0x79, 0x6c, 0x8e, 0x38, 0x90, 0x13, 0xa1, 0xcf, 0x9f, 0xe2, 0x2f,
	0x2d, 0x54, 0xed, 0x6e, 0xc7, 0x31, 0x00, 0x35, 0x1f, 0xb2, 0x0b, 0x76, 0x22, 0x5a, 0x5c, 0x25,
	0xac, 0x15, 0x95, 0x32, 0x5b, 0xd6, 0x76, 0xb6, 0xba, 0xd0, 0xed, 0x38, 0x03, 0x90, 0x0e, 0x42,
	0xb2, 0x03, 0xb6, 0x4a, 0x58, 0xc2, 0x6b, 0x4f, 0xf8, 0x75, 0x69, 0x16, 0x77, 0x9c, 0xef, 0x76,
	0x9c, 0x02, 0x82, 0xff, 0xf2, 0x6b, 0xda, 0x8f, 0x48, 0x05, 0x8a, 0x86, 0x7a, 0xc5, 0x9a, 0x6d,
	0x5e, 0xca, 0xe2, 0xce, 0x8b, 0xdd, 0x8e, 0x03, 0x08, 0x9f, 0x69, 0x94, 0x0e, 0xc5, 0xee, 0xf3,
	0x3b, 0xe9, 0x53, 0xae, 0x22, 0x9d, 0x3e, 0x8f, 0x63, 0x19, 0x0f, 0xa7, 0x8f, 0x00, 0x35, 0x1f,
	0xe2, 0x42, 0x3e, 0xe6, 0x4c, 0xc9, 0x10, 0x73, 0xb7, 0xab, 0xd0, 0xed, 0x38, 0x29, 0x42, 0xd3,
	0xaf, 0xe1, 0xa8, 0x76, 0x33, 0xc1, 0x94, 0xfb, 0x1c, 0x8d, 0xd0, 0xf4, 0xeb, 0xbe, 0xcc, 0xc0,
	0xca, 0x29, 0x67, 0x71, 0xe3, 0xe2, 0x27, 0xad, 0x1f, 0xd9, 0x4c, 0x5b, 0x2a, 0x87, 0x1a, 0x0b,
	0xdd, 0x8e, 0x83, 0xe3, 0xb4, 0xb9, 0x16, 0x21, 0x23, 0xfc, 0x52, 0x1e, 0xdb, 0x2d, 0x23, 0x7c,
	0x52, 0x82, 0x39, 0xae, 0x8c, 0xb2, 0x39, 0x04, 0x7b, 0x43, 0xf7, 0xc6, 0x02, 0x72, 0xa7, 0x12,
	0xd3, 0x3a, 0x96, 0x40, 0x36, 0x62, 0x01, 0x47, 0xd9, 0x0b, 0x14, 0x63, 0xb2, 0x0a, 0xb9, 0x48,
	0x89, 0x67, 0xdc, 0xc8, 0xa3, 0x66, 0x40, 0xf6, 0x40, 0xa7, 0x1a, 0x27, 0x35, 0x5d, 0x0b, 0x14,
	0x63, 0x9b, 0x32, 0x21, 0xfa, 0xbf, 0x68, 0x71, 0x3a, 0x08, 0xc9, 0xef, 0x50, 0xe0, 0xa1, 0x6f,
	0xb8, 0x46, 0x4e, 0xb1, 0xdb, 0x71, 0xe6, 0x78, 0xe8, 0x23, 0xb3, 0x17, 0x68, 0x9e, 0x50, 0x35,
	0xa3, 0x42, 0x4b, 0x2b, 0x18, 0x9e, 0x50, 0xc7, 0x78, 0x42, 0xbd, 0xc0, 0xfd, 0x64, 0x8d, 0x1d,
	0x2e, 0x76, 0xd7, 0x3e, 0x64, 0xb5, 0xe9, 0x51, 0x53, 0x71, 0xbf, 0xec, 0x8d, 0xdd, 0x06, 0x55,
	0xa6, 0xb8, 0x66, 0xe2, 0x0a, 0xe4, 0x92, 0x33, 0xb0, 0xb5, 0xdd, 0x6a, 0x4d, 0xa1, 0x92, 0xd4,
	0xaa, 0xbb, 0x53, 0xad, 0x3a, 0xde, 0x50, 0xe6, 0xbc, 0xf5, 0xec, 0x7f, 0x42, 0x25, 0xb4, 0x1f,
	0x91, 0x63, 0xb0, 0x75, 0xfd, 0x6a, 0x9a, 0x88, 0xb5, 0x9b, 0x98, 0xd0, 0x09, 0x0b, 0xb8, 0x4e,
	0x4a, 0xb3, 0xcc, 0x56, 0x7a, 0x11, 0xa6, 0xd7, 0x8f, 0xdc, 0x06, 0xac, 0xf4, 0x9d, 0x74, 0x14,
	0xc7, 0x7f, 0x4b, 0x9f, 0x4f, 0x3b, 0xc1, 0x83, 0x91, 0x3b, 0xe7, 0xb7, 0x69, 0x42, 0x7a, 0x5b,
	0x0d, 0x5d, 0x37, 0xaf, 0x2c, 0x98, 0x1f, 0x86, 0xbf, 0xb3, 0x53, 0xf6, 0x00, 0xd0, 0xe0, 0xb5,
	0x86, 0xf4, 0xd3, 0x5e, 0x32, 0x6c, 0x44, 0x51, 0xd2, 0x20, 0x74, 0x5f, 0xc0, 0xea, 0xb8, 0xe2,
	0x87, 0xbc, 0x3e, 0x0e, 0x60, 0xe9, 0x90, 0x37, 0xd3, 0x93, 0xd6, 0x9a, 0xf9, 0xa5, 0x76, 0xc2,
	0xa0, 0x20, 0x76, 0xaf, 0x0a, 0xc6, 0x88, 0x99, 0x9e, 0x11, 0xdd, 0x7f, 0x60, 0xf9, 0xce, 0xca,
	0xfb, 0x35, 0xa6, 0xfb, 0xce, 0x82, 0xb5, 0xa1, 0x86, 0x3b, 0x8a, 0xe3, 0x5f, 0xc1, 0xba, 0x9f,
	0x2d, 0x58, 0x9f, 0xa4, 0xea, 0x9e, 0xee, 0x7d, 0x34, 0xee, 0x5e, 0xef, 0x1b, 0xdc, 0x9b, 0xfe,
	0xec, 0x43, 0x19, 0xf8, 0xfd, 0x44, 0xd1, 0x3f, 0xda, 0x65, 0xfd, 0x17, 0x26, 0xfb, 0x95, 0x17,
	0x26, 0x37, 0xe9, 0x85, 0xc9, 0x8f, 0xbc, 0x30, 0xd5, 0xb5, 0xb7, 0xb7, 0x65, 0xeb, 0xe6, 0xb6,
	0x6c, 0x7d, 0xb8, 0x2d, 0x5b, 0xaf, 0x3f, 0x96, 0x67, 0x1e, 0xcf, 0xb2, 0x48, 0x9c, 0xcc, 0xd4,
	0xf3, 0xf8, 0x87, 0xe9, 0xcf, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x47, 0x5e, 0xfe, 0xc5, 0xcd,
	0x09, 0x00, 0x00,
}

func (m *SaveVideoInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveVideoInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveVideoInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SaveVideoInfoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveVideoInfoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveVideoInfoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StateValue != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.StateValue))
		i--
		dAtA[i] = 0x20
	}
	if m.StateKey != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.StateKey))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SaveVideoInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveVideoInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveVideoInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Result) > 0 {
		i -= len(m.Result)
		copy(dAtA[i:], m.Result)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Result)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Error))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoInfoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoInfoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoInfoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Esindex) > 0 {
		i -= len(m.Esindex)
		copy(dAtA[i:], m.Esindex)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Esindex)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0x2a
	}
	if m.StateValue != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.StateValue))
		i--
		dAtA[i] = 0x20
	}
	if m.StateKey != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.StateKey))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsIndex {
		i--
		if m.IsIndex {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.EndTime) > 0 {
		i -= len(m.EndTime)
		copy(dAtA[i:], m.EndTime)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.EndTime)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StartTime) > 0 {
		i -= len(m.StartTime)
		copy(dAtA[i:], m.StartTime)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.StartTime)))
		i--
		dAtA[i] = 0x22
	}
	if m.Psize != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Psize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page_Info != nil {
		{
			size, err := m.Page_Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DataList) > 0 {
		for iNdEx := len(m.DataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SaveVideoErrCodeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveVideoErrCodeReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveVideoErrCodeReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoErrData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoErrData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoErrData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ErrorCode != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SaveVideoErrCodeResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveVideoErrCodeResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveVideoErrCodeResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Result) > 0 {
		i -= len(m.Result)
		copy(dAtA[i:], m.Result)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Result)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if m.Error != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Error))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DelVideoIndexReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelVideoIndexReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelVideoIndexReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DelVideoIndexResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DelVideoIndexResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DelVideoIndexResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoErrInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoErrInfoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoErrInfoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsIndex {
		i--
		if m.IsIndex {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.EndTime) > 0 {
		i -= len(m.EndTime)
		copy(dAtA[i:], m.EndTime)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.EndTime)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.StartTime) > 0 {
		i -= len(m.StartTime)
		copy(dAtA[i:], m.StartTime)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.StartTime)))
		i--
		dAtA[i] = 0x22
	}
	if m.Psize != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Psize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoErrInfoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoErrInfoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoErrInfoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page_Info != nil {
		{
			size, err := m.Page_Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DataList) > 0 {
		for iNdEx := len(m.DataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.DataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Base != nil {
		{
			size, err := m.Base.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SearchVideoErrInfoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SearchVideoErrInfoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SearchVideoErrInfoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Esindex) > 0 {
		i -= len(m.Esindex)
		copy(dAtA[i:], m.Esindex)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Esindex)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0x22
	}
	if m.ErrorCode != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	if m.Index != 0 {
		i = encodeVarintMapgooPaasVideoData(dAtA, i, uint64(m.Index))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMapgooPaasVideoData(dAtA []byte, offset int, v uint64) int {
	offset -= sovMapgooPaasVideoData(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SaveVideoInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovMapgooPaasVideoData(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SaveVideoInfoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Index))
	}
	if m.Timestamp != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Timestamp))
	}
	if m.StateKey != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.StateKey))
	}
	if m.StateValue != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.StateValue))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SaveVideoInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Error))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Result)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoInfoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Index))
	}
	if m.Timestamp != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Timestamp))
	}
	if m.StateKey != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.StateKey))
	}
	if m.StateValue != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.StateValue))
	}
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Esindex)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Page))
	}
	if m.Psize != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Psize))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.IsIndex {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if len(m.DataList) > 0 {
		for _, e := range m.DataList {
			l = e.Size()
			n += 1 + l + sovMapgooPaasVideoData(uint64(l))
		}
	}
	if m.Page_Info != nil {
		l = m.Page_Info.Size()
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SaveVideoErrCodeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovMapgooPaasVideoData(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoErrData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Index))
	}
	if m.Timestamp != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Timestamp))
	}
	if m.ErrorCode != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.ErrorCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SaveVideoErrCodeResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Error))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Result)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelVideoIndexReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DelVideoIndexResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoErrInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Page))
	}
	if m.Psize != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Psize))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.EndTime)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.IsIndex {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoErrInfoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Base != nil {
		l = m.Base.Size()
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if len(m.DataList) > 0 {
		for _, e := range m.DataList {
			l = e.Size()
			n += 1 + l + sovMapgooPaasVideoData(uint64(l))
		}
	}
	if m.Page_Info != nil {
		l = m.Page_Info.Size()
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SearchVideoErrInfoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Index != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Index))
	}
	if m.Timestamp != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.Timestamp))
	}
	if m.ErrorCode != 0 {
		n += 1 + sovMapgooPaasVideoData(uint64(m.ErrorCode))
	}
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	l = len(m.Esindex)
	if l > 0 {
		n += 1 + l + sovMapgooPaasVideoData(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMapgooPaasVideoData(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMapgooPaasVideoData(x uint64) (n int) {
	return sovMapgooPaasVideoData(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SaveVideoInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveVideoInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveVideoInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &SaveVideoInfoData{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SaveVideoInfoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveVideoInfoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveVideoInfoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateKey", wireType)
			}
			m.StateKey = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateKey |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateValue", wireType)
			}
			m.StateValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateValue |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SaveVideoInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveVideoInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveVideoInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			m.Error = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Error |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoInfoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoInfoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoInfoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateKey", wireType)
			}
			m.StateKey = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateKey |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateValue", wireType)
			}
			m.StateValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateValue |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Esindex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Esindex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Psize", wireType)
			}
			m.Psize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Psize |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsIndex", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsIndex = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataList = append(m.DataList, &SearchVideoInfoData{})
			if err := m.DataList[len(m.DataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page_Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page_Info == nil {
				m.Page_Info = &PageBaseInfo{}
			}
			if err := m.Page_Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SaveVideoErrCodeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveVideoErrCodeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveVideoErrCodeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &VideoErrData{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoErrData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoErrData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoErrData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SaveVideoErrCodeResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveVideoErrCodeResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveVideoErrCodeResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			m.Error = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Error |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelVideoIndexReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelVideoIndexReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelVideoIndexReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DelVideoIndexResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DelVideoIndexResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DelVideoIndexResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoErrInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoErrInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoErrInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Psize", wireType)
			}
			m.Psize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Psize |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsIndex", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsIndex = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoErrInfoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoErrInfoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoErrInfoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Base", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Base == nil {
				m.Base = &BaseRespInfo{}
			}
			if err := m.Base.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataList = append(m.DataList, &SearchVideoErrInfoData{})
			if err := m.DataList[len(m.DataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page_Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Page_Info == nil {
				m.Page_Info = &PageBaseInfo{}
			}
			if err := m.Page_Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SearchVideoErrInfoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SearchVideoErrInfoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SearchVideoErrInfoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Esindex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Esindex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMapgooPaasVideoData(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthMapgooPaasVideoData
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMapgooPaasVideoData(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMapgooPaasVideoData
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMapgooPaasVideoData
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMapgooPaasVideoData
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMapgooPaasVideoData
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMapgooPaasVideoData
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMapgooPaasVideoData        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMapgooPaasVideoData          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMapgooPaasVideoData = fmt.Errorf("proto: unexpected end of group")
)
